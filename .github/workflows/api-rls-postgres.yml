name: API RLS tests (Postgres)

on:
  pull_request:
    paths:
      - 'api/**'
      - '.github/workflows/api-rls-postgres.yml'
  push:
    branches: [ main ]
    paths:
      - 'api/**'
      - '.github/workflows/api-rls-postgres.yml'

jobs:
  rls-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports: ["5432:5432"]
        env:
          POSTGRES_DB: granterstellar
          POSTGRES_USER: appuser
          POSTGRES_PASSWORD: changeme2
        options: >-
          --health-cmd "pg_isready -U appuser -d granterstellar"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install deps
        working-directory: api
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --no-cache-dir -r requirements.txt
      - name: Run migrations
        working-directory: api
        env:
          DEBUG: '1'
          SECRET_KEY: test
          DJANGO_SETTINGS_MODULE: app.settings
          DATABASE_URL: postgresql://appuser:changeme2@127.0.0.1:5432/granterstellar
        run: .venv/bin/python manage.py migrate --noinput
      - name: Run RLS tests
        working-directory: api
        env:
          DEBUG: '1'
          SECRET_KEY: test
          DJANGO_SETTINGS_MODULE: app.settings
          DATABASE_URL: postgresql://appuser:changeme2@127.0.0.1:5432/granterstellar
        run: .venv/bin/python manage.py test -v 2 db_policies.tests
